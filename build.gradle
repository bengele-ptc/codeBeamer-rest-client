plugins {
	id 'idea'
	id 'eclipse'
	id 'java-library'
	id 'org.openapi.generator' version "4.3.1"
	id 'distribution'
}

group = 'com.intland.codebeamer.rest'
version = '10.1-SP3'

repositories {
	jcenter()
}

dependencies {
	api 'joda-time:joda-time:2.9.9'
    implementation 'io.swagger:swagger-annotations:1.5.22'
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation 'com.squareup.okhttp3:okhttp:3.14.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.2'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'io.gsonfire:gson-fire:1.8.3'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    implementation 'org.threeten:threetenbp:1.3.5'
}

compileJava {
    sourceCompatibility = '1.8'
}

def generatedSourcesDir = "$buildDir/generated"

openApiGenerate {
	generatorName = "java"
	inputSpec = "$rootDir/specs/v3.json".toString()
	outputDir = generatedSourcesDir
	apiPackage = "com.intland.codeBeamer.client.rest.v3.api"
	invokerPackage = "com.intland.codeBeamer.client.rest.v3.invoker"
	modelPackage = "com.intland.codeBeamer.client.rest.v3.model"
	generateApiTests = false
	generateModelTests = false
	configOptions = [
		dateLibrary: "joda"
	]
}

sourceSets {
	main {
		java {
			srcDir "$generatedSourcesDir/src/main/java".toString()
		}
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc {
    options.tags = [ "http.response.details:a:Http Response Details" ]
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

distributions {
	main {
		contents {
			from jar
			from sourcesJar
			from javadocJar
			into("libs") {
				from (project.configurations.runtimeClasspath)
			}
		}
	}
	
}

compileJava.dependsOn tasks.openApiGenerate